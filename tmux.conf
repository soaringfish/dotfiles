# TMUX CONFIGURATION
# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

set -s escape-time 0
# Index starts from 1

# enable focus-events
# set-option -g focus-events on

set-option -g base-index 0
set-option -g pane-base-index 0

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
# set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# 256-color terminal
# set-option -g default-terminal "screen-256color"
# set-option -g default-terminal "screen-256color-italic"
# set-option -g default-terminal "xterm-256color-italic"
# set-option -g default-terminal "tmux-256color"
set -g default-terminal "tmux"

# Sierra
# set-option -g default-command "reattach-to-user-namespace -l bash"

# Add truecolor support (tmux info | grep Tc)
# set-option -ga terminal-overrides ",xterm-256color-italic:Tc"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Mouse
set-option -g mouse on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
bind-key c-a last-window

# resize pane
bind-key c-l resize-pane -R
bind-key c-h resize-pane -L
bind-key c-j resize-pane -D
bind-key c-k resize-pane -U
bind-key L resize-pane -R 5
bind-key H resize-pane -L 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5

# prefix a
bind-key a send-prefix

# prefix |
bind-key | split-window -h -c "#{pane_current_path}"
bind-key \\ split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Back and forth
# bind-key bspace previous-window
# bind-key space next-window
# bind-key / next-layout # Overridden

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"

# copy-mode
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Capture pane and open in Vim
# bind-key C-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
             # new-window "reattach-to-user-namespace view /tmp/tmux-capture.txt"
# bind-key M-c run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

# Clear scrollback buffer
# bind-key C-l send-keys C-l \; clear-history

# Notes
# bind-key C-n if-shell "tmux select-window -t NOTES" "" \
  # "new-window -n NOTES 'reattach-to-user-namespace bash -i ~/gdrive/sync/notes/list'"

# Goyo
bind-key G set status
bind-key B set pane-border-status off
bind-key b set pane-border-status bottom

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set-option -g status-justify centre
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
# set-option -g status-bg colour237
set-option -g status-bg colour0
set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60

# set-option -g pane-border-format "#{pane_index} #{pane_current_command}"
set-option -g pane-border-format "#{pane_index} #{pane_current_command}:#{pane_current_path}"
set-option -g pane-border-status bottom

# set-option -g pane-active-border-fg colour245
# set-option -g pane-border-fg colour243
# set-option -g pane-active-border-fg colour215
# set-option -g pane-border-fg colour243

# set -g pane-border-style "fg=#ebdbb2"
# set -g pane-active-border-style "fg=#d79921"
set -g pane-active-border-style "fg=#d79921"

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# set -g pane-border-format "#{pane_index} #{pane_title}"
# rename prompt
# bind . command-prompt -p "(rename-pane)" -I "#T" "select-pane -T '%%'"

# set-window-option -g window-style 'bg=colour237'
# set-window-option -g window-active-style 'bg=colour235'

set-window-option -g window-style 'bg=colour0'
set-window-option -g window-active-style 'bg=colour0'

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# select-pane (@george-b)
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"


# # copy/paste with system clipboard
if-shell "[ -x \"$(which reattach-to-user-namespace)\" ]" "set -g default-command 'reattach-to-user-namespace -l zsh'"
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# Bind-key switch
bind-key F9  set-option -g prefix C-a   \;\
             bind-key a send-prefix     \;\
             bind-key p previous-window \;\
             bind-key C-a last-window
bind-key F10 set-option -g prefix C-b   \;\
             bind-key b send-prefix     \;\
             bind-key p paste-buffer    \;\
             bind-key C-b last-window

